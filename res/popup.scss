////
/// Styles for the extension popup.
/// @author Daniil Filippov <filippovdaniil@gmail.com>
////

@import "settings";
@import "colors";
@import "reset";
@import "placeholders";

html, body {
  width: $popup-width;
  min-height: $popup-min-height;
  font-family: $font-family;
  font-size: $font-size;
}

#menu {
  > ul {
    > li {
      display: inline-block;
      position: relative;
    }
    > li > ul {
      display: none;
      position: absolute;
      top: 100%;
      background: #fff;
      white-space: nowrap;
      z-index: 1;
      box-shadow: 1px 3px 3px rgba($kts-dark-gray, 0.3);
    }
    > li:hover > ul {
      display: block;
    }
    > li.drop-left:hover > ul {
      right: 0;
    }
  }
  a {
    display: block;
    padding: $popup-base-indent;
    cursor: pointer;
    background-color: #fff;
    transition: $transition-background-color;
  }
  a:hover, > ul > li:hover > a {
    background-color: $kts-light-gray;
  }
  a {
    text-decoration: underline;
  }
  a.internal {
    text-decoration: none;
    > span {
      @extend %dotted-underline;
    }
  }
  li > span {
    border-bottom: 1px dotted inherit;
  }
  li.icon > a {
    $padding-icon: ($popup-base-indent * 2 + $font-size - 16px) / 2;
    padding: $padding-icon $popup-base-indent;

    > img {
      vertical-align: text-bottom;
      &:not(:only-child) {
        margin-right: 1ch;
      }
    }
  }
}

.search-user {
  > input, button {
    padding: $popup-base-indent;
    border: 1px solid $kts-medium-gray;
    border-radius: 0;
  }
  > input:focus, > button:focus {
    border-color: darken($kts-medium-gray, 10%);
  }
  > input:focus + button {
    border-left-color: darken($kts-medium-gray, 10%);
  }
  > input {
    width: 80%;
    border-width: 1px 0 1px 1px;
  }
  > button {
    width: 20%;
    background-color: $kts-light-gray;
    transition: $transition-background-color;
    cursor: pointer;

    &:hover {
      background-color: darken($kts-light-gray, 10%);
    }
    &:active {
      background-color: darken($kts-light-gray, 15%);
    }
  }
  .user-data {
    padding: $popup-base-indent;
    a {
      cursor: pointer;

      > img {
        vertical-align: text-bottom;
        margin-right: 2px;
      }
      > span {
        text-decoration: underline;
        &.blocked {
          text-decoration: underline line-through;
        }
      }
    }
    > a {
      @extend %rank-label;
    }
    .user-links > a {
      &:hover > img {
        -webkit-filter: contrast(25%);
        filter: contrast(25%);
      }
      &:hover {
        color: $kts-dark-gray;
      }
    }
    .hash:before {
      content: "#";
    }
  }
}

.mail {
  .messages-list {
    .avatar-wrapper {
      @extend %image-bevel;
      left: 2px;
      border-radius: 3px;
    }
    .avatar {
      width: 40px;
      height: 40px;
      vertical-align: middle;
      border-radius: inherit;
      -webkit-transform: translateZ(0);
      transform: translateZ(0);
      transition: filter 0.1s linear;
    }
    .message {
      position: relative;
      display: inline-block;
      vertical-align: middle;
      width: calc(100% - 40px);
      height: 50px;
      padding: $popup-base-indent / 2 #{$popup-base-indent};

      > a {
        text-decoration: underline;
      }
      > time {
        position: absolute;
        top: $popup-base-indent / 2;
        right: $popup-base-indent;
        color: $kts-medium-gray;
      }
      > time:first-letter {
        text-transform: capitalize;
      }
      > div {
        margin-top: $popup-base-indent;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }
      > div > span:first-child {
        color: $kts-dark-gray;
      }

      &:before {
        position: absolute;
        top: 0;
        left: $popup-base-indent;
        right: $popup-base-indent;
        border-top: 1px solid rgba($kts-medium-gray, 0.2);
        border-bottom: 1px solid rgba($kts-light-gray, 0.2);
        content: "";
      }
    }
    .avatar, .message > div, .message > time {
      pointer-events: none;
    }
    > li {
      transition: $transition-background-color;
      cursor: pointer;
    }
    > li:hover {
      background-color: $kts-light-gray;

      .avatar {
        filter: contrast(125%);
      }
    }
    > li:active {
      background-color: darken($kts-light-gray, 5%);
    }
  }
}
